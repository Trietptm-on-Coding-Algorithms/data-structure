#!/usr/bin/env python

############################################################################                                                                              
# get all EtherNet/IP devices identity information 
# By Wei Gao                                                                  
#                                                                             
#release date: Oct 29 2012                                                    
# This script is a demonstration of sending UDP broadcast message to tell 
# all EtherNet/IP devices to return a data set with identity information     
###########################################################################

from sys import argv
from os import geteuid
from scapy.all import *
from socket import *
import random
import time


#check the program argument
if len(argv) !=2:
   print "[!] Usage: ./listidentity.py <interface>"
   sys.exit(0)

payload = ''
tmp = ''

#payload options:
#format is command + length + session handle + status + sender content + options
#ListIdentidy command is 66
#length is 0000
#session handle is 00000000
#status must be 00000000
#sender content 0000000000000000
#option must be 00000000
payload = '\x63\x00' + '\x00\x00' + '\x00\x00\x00\x00' + '\x00\x00\x00\x00' + '\x00\x00\x00\x00\x00\x00\x00\x00' + '\x00\x00\x00\x00'

#UDP options:
#EtherNet/IP src port: 2222, dst port: 2222
#boardcaset dst address is 255.255.255.255

#send UDP packet and waiting response
#pkt = send(Ether(dst="ff:ff:ff:ff:ff:ff")/IP(src="10.200.3.118", dst= "255.255.255.255")/UDP(sport= 2222, dport = 2222)/payload, iface = "eth0")
host = '10.200.3.118'
s = socket(AF_INET, SOCK_DGRAM)
s.bind((host,0))
s.setsockopt(SOL_SOCKET, SO_BROADCAST, 1)

s.sendto(payload, ('<broadcast>', 44818))
